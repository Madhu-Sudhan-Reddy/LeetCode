/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
       List<List<Integer>> ls=new ArrayList<>();
       Queue<TreeNode> q=new LinkedList<>();
       List<Integer> l=new ArrayList<>();
       if(root==null)
       return ls;
       q.add(root);
       
       //l=new ArrayList<>();
       
       while(!q.isEmpty()) {
            int b=q.size();
             l=new ArrayList<>();
            for(int i=0;i<b;i++){
           if(q.peek().left!=null)
           q.add(q.peek().left);
           if(q.peek().right!=null)
           q.add(q.peek().right);
           l.add(q.poll().val);
            }
            ls.add(l);
       }
       return ls;
    }
}