/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isEvenOddTree(TreeNode root) {
      Queue<TreeNode> q=new LinkedList<>();
      if(root==null)
      return true;
      q.add(root);
      int level=0;
      while(q.size()>0){
          int a=q.size();
         int min=Integer.MIN_VALUE,max=Integer.MAX_VALUE;
          for(int i=0;i<a;i++){
              if(q.peek().left!=null)
              q.add(q.peek().left);
               if(q.peek().right!=null)
              q.add(q.peek().right);
              if(level%2==0){
                  if(min<q.peek().val&&q.peek().val%2!=0){
                      min=q.poll().val;
                  }
                  else
                  return false;
              }
              else{
                if(max>q.peek().val&&q.peek().val%2==0){
                      max=q.poll().val;
                  }
                  else
                  return false;
              }
          }
           level++;
      } 
      return true;  
    }

}